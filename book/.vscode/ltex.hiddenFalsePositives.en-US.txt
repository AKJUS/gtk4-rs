{"rule":"PUNCTUATION_PARAGRAPH_END","sentence":"^\\QIntroduction to GObject\nReference Counting\nSubclassing\nProperties & signals\nActions\nModels\nUse Subclassing in our App\nBasic Widgets\nAdd Widgets to our App\nAdvanced Widgets\nViews\nPaintables\nGTK media support\nShaders\nBuilding a Simple To-do App\nInterface Builder\nGtkBuilder\nTemplates\nInternationalization\nAccessibility\nFinishing up the To-do App\\E$"}
{"rule":"GITHUB","sentence":"^\\QMeson\nFlatpak\nfenv\nGitlab CI\nGithub Actions\\E$"}
{"rule":"PUNCTUATION_PARAGRAPH_END","sentence":"^\\QGetting Started\nWidgets\nThe main loop\nGObject\nExtend our App\nIntroduction to GObject\nReference Counting\nSubclassing\nProperties & signals\nActions\nModels\nUse Subclassing in our App\nAdvanced Widgets\nViews\nPaintables\nGTK media support\nShaders\nBuilding a Simple To-do App\nInterface Builder\nGtkBuilder\nTemplates\nInternationalization\nAccessibility\nFinishing up the To-do App\\E$"}
{"rule":"MISSING_COMMA_AFTER_INTRODUCTORY_PHRASE","sentence":"^\\QOf course we did: reference cycles.\\E$"}
{"rule":"POSSESSIVE_APOSTROPHE","sentence":"^\\QLuckily Rust's safety guarantees allow you to stop worrying about the nasty bugs concurrency tends to bring.\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE","sentence":"^\\QOne kind of widget might be able to contain other widgets, it might present information and it might react to interaction.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QIn \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q we create an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q instance, with\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QIn \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q we create an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q instance, with an application id and the default application flags.\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE","sentence":"^\\QWe run it with \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and it blocks the terminal, but seemingly nothing happens.\\E$"}
